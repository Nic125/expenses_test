{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onYearSelected","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoint","getMonth","Expenses","useState","selectedYear","setSelecetedYear","filteredExpense","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","clickHandler","NewExpense","show","setShow","enteredExpenseData","random","onAddExpense","App","DUMMY_EXPENSES","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.482b4f1a.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className\r\n    return(\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card;","import './ExpenseFilter.css';\r\n\r\nfunction ExpensesFilter(props){\r\n\r\n    function changeYearHandler(event){\r\n        props.onYearSelected(event.target.value)\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={changeYearHandler} >\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('es-us', {month : 'long'})\r\n    const day = props.date.toLocaleString('en-us', {day : '2-digit'})\r\n    const year = props.date.getFullYear()\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import ExpenseDate from '../Expenses/ExpenseDate';\r\nimport './ExpenseItem.css'\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n    return (\r\n        <div className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css'\r\n\r\nfunction ExpensesList(props){\r\n\r\n    if (props.expenses.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.expenses.map((expense) => (\r\n            <ExpenseItem \r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n            />))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default ExpensesList;","import './ChartBar.css'\r\n\r\nfunction ChartBar(props){\r\n    let barFillHeight = '0%'\r\n\r\n    if (props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    console.log(barFillHeight)\r\n\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFillHeight }} ></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar'\r\nimport './Chart.css'\r\n\r\nfunction Chart(props){\r\n    const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointsValue);\r\n\r\n    return(\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => \r\n            <ChartBar \r\n            key={dataPoint.label}\r\n            value={dataPoint.value} \r\n            maxValue={totalMaximum} \r\n            label={dataPoint.label}\r\n             />)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props){\r\n    const chartDataPoint = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ]\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoint[expenseMonth].value += expense.amount;\r\n    }\r\n    \r\n    return(\r\n        <Chart dataPoints={chartDataPoint} />\r\n    )\r\n}\r\n\r\nexport default ExpensesChart;","import {useState} from 'react';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nfunction Expenses(props){\r\n    const expenses = props.expenses\r\n    const [selectedYear, setSelecetedYear] = useState('2020');\r\n\r\n    const filteredExpense = expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === selectedYear;\r\n    });\r\n\r\n    function onYearSelected(onYearSelected){\r\n        setSelecetedYear(onYearSelected)\r\n    };\r\n\r\n    return(\r\n        <li>\r\n        <Card className=\"expenses\">\r\n        <ExpenseFilter onYearSelected={onYearSelected} selected={selectedYear} />\r\n        <ExpensesChart expenses={filteredExpense} />\r\n        <ExpensesList expenses={filteredExpense} />\r\n        </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props){\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\")\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\")\r\n    const [enteredDate, setEnteredDate] = useState(\"\")\r\n    \r\n\r\n    function titleChangeHandler(event){\r\n        setEnteredTitle(event.target.value)\r\n    }\r\n\r\n    function amountChangeHandler(event){\r\n        setEnteredAmount(event.target.value)\r\n    }\r\n\r\n    function dateChangeHandler(event){\r\n        setEnteredDate(event.target.value)\r\n    }\r\n    \r\n    function submitHandler(event){\r\n        event.preventDefault()\r\n        \r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n          };\r\n\r\n        props.onSaveExpenseData(expenseData)\r\n\r\n        setEnteredAmount('')\r\n        setEnteredDate('')\r\n        setEnteredTitle('')\r\n    \r\n    }\r\n\r\n    \r\n    return(\r\n        \r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.clickHandler} >Cancel</button>\r\n                <button type=\"submit\">Add expense</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nfunction NewExpense(props){\r\n\r\n    const [show, setShow] = useState(false)\r\n    function saveExpenseDataHandler(enteredExpenseData){\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n\r\n        props.onAddExpense(expenseData)\r\n    } \r\n\r\n    function clickHandler(){\r\n        setShow(show => !show)\r\n    }\r\n\r\n    return(\r\n    <div className=\"new-expense\">\r\n    {show ? <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} clickHandler={clickHandler} /> : <button onClick={clickHandler} >Add New Expense</button>}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense;","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nfunction App() {\n  const DUMMY_EXPENSES = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  \n  function addExpenseHandler(expense){\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}